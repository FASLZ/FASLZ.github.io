<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[飞行模拟器]]></title>
    <url>%2F2018%2F09%2F30%2F%E9%A3%9E%E8%A1%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%2F</url>
    <content type="text"><![CDATA[X-Plane 不知为什么突然就从谷歌play消失了，翻了半天，另一个业内领袖’极限着陆’也不见了Σ(°Д°;)不过在国内的应用平台上还是可以下载的，AppStore也还在。🤔 我翻到这个软件时激动的泪流满面(ಥ﹏ಥ) 遥想当年，对着谷歌地图里的模拟器就是一下午的我来说简直无法自拔（╯‵□′）╯︵┴─┴ 放几张夜景 波音747冷舱启动及自动着陆 Xplane for Android 想要更好的体验，请转战pc版。不过完整版要花钱，网上找找哪里有破解版的吧。 未完待续]]></content>
      <categories>
        <category>模拟</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>X-Plane</tag>
        <tag>fly</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tool]]></title>
    <url>%2F2018%2F09%2F21%2Ftool%2F</url>
    <content type="text"><![CDATA[App for Android &gt;Coding C4droid -C/C++ IDE Pydroid3 -Python3 IDE AIDE -Java/Android_app/Html IDE Java N-IDE -Java IDE anWriter free -Html/css/JavaScrip IDE Learn code SoloLearn -the best community AIDE -you can learn android app programming for LinuxTerminal w3m -an web browser (with image) elinks -web browser weechat -IRC irssi -IRC Xchat -IRC 未完待续]]></content>
      <tags>
        <tag>tool</tag>
        <tag>App</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[12306车票查询]]></title>
    <url>%2F2018%2F09%2F19%2F12306%2F</url>
    <content type="text"><![CDATA[从C脱坑开始接触Python，这门传说中的语言逐渐展示出了它的强大( ॑꒳ ॑)最近在网上发现有使用python进行12306查票的教程，正好拿来练练手，于是乎写下此文 2018-09-21由于12306反爬措施频繁更新，无法查询今后将不定期更新 2018-09-30重写了查询方式 流程 模拟用户登录网站查询页面 提交查询信息 解析并打印获得信息 需要的模块 requests 用于获取网页数据 docopt 解析命令行参数 prettytable， 数据用表格的形式打印在终端 colorama， 为打印在表格中的数据着色 安装方式： pip install requests prettytable docopt colorama 第一步当我们打开网站时，你会发现只能从页面中的表单进行输入，如果是这样的话要用另一种方法，这里不做讨论那么，如何将我们所需要的需求直接提交给12306的服务器呢？这里大佬帮我们找到了提交的网址(具体百度) https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={}&amp;leftTicketDTO.from_station={}&amp;leftTicketDTO.to_station={}&amp;purpose_codes=ADULT在括号中填入相应值比如 {2018-09-19}{SHH}{XAY} 日期只能填写当日及之后30天 那几个字母就是站点的代号显然，12306不愿让我们知道对应的站台，但在通过chrome中f12(此处省略)，可以发现站点对照表https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.8971 不难发现在station_names字符串中，有站点对应的中文拼音代号，因此可以通过程序来获得代号并填入之前的链接 1import requests 完整程序tickets.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192import requestsimport jsonimport timeimport refrom prettytable import PrettyTablefrom colorama import Fore,inittitle = '车次 出发/到达站 历时 软卧 硬卧 硬座 状态'nowTime = time.strftime('%Y-%m-%d')url1 = 'https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.8971'response = requests.get(url1)stations = re.findall(u'([\u4e00-\u9fa5]+)\|([A-Z]+)',response.text)stationsPY = re.findall(u'([A-Z]+)\|([a-z]+)',response.text)stations = dict(stations)stationsPY = dict(&#123;v:k for k,v in stationsPY&#125;)#print(stations)def name(code): for k,v in stations.items(): if code == v: return kFs = input('From station:\t')Ts = input('End station:\t')F = stations.get(Fs) or stationsPY.get(Fs) or 'SHH'T = stations.get(Ts) or stationsPY.get(Ts) or 'XAY'date = input('time of train:\t') or nowTimeif len(date) == 8: date = '&#123;&#125;-&#123;&#125;-&#123;&#125;'.format(date[:4],date[4:6],date[6:])elif len(date) == 4: date = '&#123;&#125;-&#123;&#125;-&#123;&#125;'.format(time.strftime('%Y'),date[:2],date[2:])elif len(date) == 2: date = '&#123;&#125;-&#123;&#125;'.format(time.strftime('%Y-%m'),date)elif len(date) == 1: date = '&#123;&#125;-&#123;&#125;'.format(time.strftime('%Y-%m'),'0'+date)print(date,F,T)#url='https://kyfw.12306.cn/otn/leftTicket/query?leftTicketurl = 'https://kyfw.12306.cn/otn/leftTicket/queryA'header = &#123;'User-Agent': header = &#123;'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0'&#125;key_word = &#123; "leftTicketDTO.train_date": date, "leftTicketDTO.from_station": F, "leftTicketDTO.to_station": T, "purpose_codes": "ADULT" &#125;try: response = requests.session().get(url, params=key_word, headers=header) tickets = response.json() lists = tickets['data']['result']except Exception as error: print('404 ?_? this url is losted') exit(0)table=PrettyTable(title.split(' '))#tickets=[]for list in lists: #print(list+'\n\n') ticket = [] lis = list.split('|') train_code = lis[3] from_station_name=lis[6] to_station_name = lis[7] start_time= lis[8] arrive_time =lis[9] lishi = lis[10] swz_num = lis[32] or lis[25] zy_num = lis[31] ze_num = lis[30] gr_num =lis[21] rw_num = lis[23] dw_num = lis[27] yw_num = lis[28] rz_num = lis[24] yz_num = lis[29] wz_num = lis[26] qt_num = lis[22] note_num = lis[1] #ticket.append() if lis[11] == 'Y': lis11 = '有' elif lis[11] == 'N': lis11 = '无' elif lis[11] == 'IS_TIME_NOT_BUY': lis11 = 'X' fs = (Fore.GREEN + name(lis[6]) + Fore.RESET) ts = (Fore.RED + name(lis[7]) + Fore.RESET) tfs= Fore.GREEN + lis[8] + Fore.RESET tts= Fore.RED + lis[9] + Fore.RESET table.add_row([lis[3],fs+'\n'+ts,tfs+'\n'+tts,lis[23],lis[28],lis[29],lis[1]])print(table) 未完待续]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>code</tag>
        <tag>12306</tag>
      </tags>
  </entry>
</search>
